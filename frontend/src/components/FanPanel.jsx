import React from 'react'
import { useState } from 'react'
import axios from 'axios'
import { toast } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css'

function FanPanel() {
    const [isClicked, setClicked] = useState(false)
    let [fanActive, setFanActive] = useState(false)
  
    const presseffect = async (event) => {
      setClicked(true);
  
      try {
        const response = await (fanActive ? axios.get('http://0.0.0.0:5000/fan/stop') : axios.get('http://0.0.0.0:5000/fan/start')) 
  
        console.log(response.data)
        setFanActive(!fanActive)
      } catch (error) {
        toast.error('Error making fan request')
        console.error('Error making fan request:', error)
      } finally {
        setFanActive(!fanActive)
        setTimeout(() => {
          setClicked(false)
         
        }, 200);
      }
    };


  
    function generateFanSVG() {
      return (
        <svg style={{opacity: "0.3"}} width="45" viewBox="0 0 125 125" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M59.224 0.000637566C67.0841 0.050228 75.781 3.16823 84.0192 11.4064C85.9718 13.3591 87.6455 15.6526 88.3584 18.3677C89.0713 21.0613 88.6949 23.9273 87.3108 26.3455C86.1702 28.3973 84.5089 29.9594 83.108 31.1062C79.8102 33.8089 75.8864 35.7429 72.8613 38.7679C71.1945 40.4006 70.0068 42.4587 69.4272 44.7188C73.9957 40.0139 79.7668 35.4826 86.0958 32.7365C91.1354 30.5483 96.9127 29.3396 102.839 30.5421C108.889 31.7633 114.344 35.34 118.856 41.3528C121.757 45.2271 124.609 51.5809 124.559 59.224C124.51 67.0841 121.398 75.781 113.154 84.0192C111.201 85.9718 108.914 87.6455 106.192 88.3584C103.499 89.0713 100.633 88.6949 98.2145 87.3108C96.1627 86.1702 94.6005 84.5089 93.4538 83.108C90.7573 79.8102 88.8171 75.8864 85.7921 72.8613C84.1596 71.1942 82.1014 70.0065 79.8412 69.4272C84.5461 73.9957 89.0774 79.7668 91.8235 86.0958C94.0117 91.1354 95.2204 96.9127 94.0241 102.839C92.7967 108.889 89.22 114.344 83.2072 118.856C79.3329 121.757 72.9791 124.609 65.336 124.559C57.4759 124.51 48.779 121.398 40.5408 113.154C38.5882 111.201 36.9145 108.914 36.2016 106.192C35.4906 103.498 35.8692 100.632 37.2554 98.2145C38.3898 96.1627 40.0511 94.6005 41.452 93.4538C44.7498 90.7573 48.6736 88.8171 51.6986 85.7921C53.3678 84.1602 54.5577 82.102 55.139 79.8412C50.5643 84.5461 44.787 89.0774 38.4642 91.8235C33.4246 94.0117 27.6473 95.2204 21.7212 94.0241C15.6712 92.7967 10.2163 89.22 5.70353 83.2072C2.8025 79.3329 -0.0489528 72.9791 0.000637566 65.336C0.050228 57.4759 3.16823 48.779 11.4064 40.5408C13.3591 38.5882 15.6526 36.9145 18.3677 36.2016C21.0621 35.4906 23.9282 35.8692 26.3455 37.2554C28.3973 38.3898 29.9594 40.0511 31.1062 41.452C33.8089 44.7498 35.7429 48.6736 38.7679 51.6986C40.3424 53.2731 42.357 54.5563 44.7188 55.139C40.0139 50.5643 35.4826 44.787 32.7365 38.4642C30.5483 33.4246 29.3396 27.6473 30.5421 21.7212C31.7633 15.6712 35.34 10.2163 41.3528 5.70353C45.2271 2.8025 51.5809 -0.0489528 59.224 0.000637566ZM49.2811 67.8155C41.4086 68.3982 34.559 65.0261 30.0028 60.4637C27.6101 58.071 25.6761 55.232 24.2008 53.0624C23.3565 51.7714 22.459 50.5161 21.5105 49.2997C20.9092 48.5682 20.841 48.6364 20.1715 49.3059C14.0719 55.4055 12.423 61.0464 12.3982 65.4228C12.3641 69.1237 13.4914 72.742 15.6216 75.7686C18.6094 79.742 21.5601 81.3413 24.176 81.8682C26.9096 82.4261 30.0524 81.9612 33.5362 80.4487C39.487 77.87 45.2767 72.7064 49.2811 67.8155ZM67.8155 75.2789C68.3982 83.1514 65.0261 90.001 60.4637 94.5572C58.071 96.9499 55.232 98.8839 53.0624 100.359C51.7916 101.227 50.4961 102.07 49.2997 103.05C48.5682 103.651 48.6364 103.719 49.3059 104.388C55.4055 110.488 61.0526 112.137 65.4228 112.162C69.1237 112.196 72.742 111.069 75.7686 108.938C79.742 105.951 81.3413 103 81.8682 100.384C82.4261 97.6503 81.9612 94.5076 80.4487 91.0238C77.87 85.073 72.7064 79.2895 67.8155 75.2789ZM75.2789 56.7445C83.1514 56.1618 90.001 59.5339 94.5572 64.0962C97.9045 67.4436 100.074 71.6278 103.05 75.2541C103.651 75.9979 103.719 75.9236 104.388 75.2541C110.488 69.1545 112.137 63.5136 112.162 59.1372C112.193 54.5625 110.445 50.7998 108.938 48.7914C105.951 44.818 103 43.2187 100.384 42.6918C97.6503 42.1339 94.5076 42.5988 91.0238 44.1113C85.073 46.69 79.2895 51.8536 75.2789 56.7445ZM56.7445 49.2811C56.1618 41.4086 59.5339 34.559 64.0962 30.0028C66.5572 27.5419 69.4892 25.5707 71.6836 24.0768C72.9116 23.2723 74.1049 22.4161 75.2603 21.5105C75.9917 20.9092 75.9236 20.841 75.2541 20.1715C69.1545 14.0719 63.5136 12.423 59.1372 12.3982C55.4363 12.3641 51.8179 13.4914 48.7914 15.6216C44.818 18.6094 43.2187 21.5601 42.6918 24.176C42.1339 26.9096 42.5988 30.0524 44.1113 33.5362C46.69 39.487 51.8536 45.2767 56.7445 49.2811Z" fill="black"/>
        </svg>
      )
    }
  
  
    return (
      <div onClick={presseffect} style={fanActive? {opacity: "100%"} : {opacity : "50%"}} className={`fanPanelContainer ${isClicked ? 'clicked' : ''}`}>
            <div class="fanLabelAndActiveContainer">

                <div>
                    Fan
                </div>

                <div class="onOrOffContainer">
                    {fanActive? "ON" : "OFF"}
                </div>

            </div>

            <div class="FanIconContainer">
                <div className={fanActive ? "FanAnimation" : " "}>
                   {generateFanSVG()} 
                </div>
            </div>
      </div>
    )
}

export default FanPanel