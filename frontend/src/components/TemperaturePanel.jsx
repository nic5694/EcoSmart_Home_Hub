import React, { useState } from 'react'
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Area, AreaChart } from 'recharts';


function TemperaturePanel() {

  const [currentTemperature, setCurrentTemperature] = useState(24)

  const generateTempIconSVG = () => {
    return (
      <svg style={{opacity: "0.3"}} width="20" viewBox="0 0 125 234" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M15.57 46.71C15.57 34.3217 20.4912 22.4409 29.2511 13.681C38.0109 4.92122 49.8917 0 62.28 0C74.6683 0 86.5491 4.92122 95.3089 13.681C104.069 22.4409 108.99 34.3217 108.99 46.71V130.072C116.918 139.061 122.083 150.147 123.867 161.999C125.65 173.851 123.976 185.966 119.044 196.89C114.113 207.815 106.134 217.084 96.0654 223.586C85.9967 230.088 74.2656 233.546 62.28 233.546C50.2944 233.546 38.5633 230.088 28.4946 223.586C18.4258 217.084 10.447 207.815 5.51569 196.89C0.584347 185.966 -1.09007 173.851 0.693352 161.999C2.47678 150.147 7.64228 139.061 15.57 130.072V46.71ZM62.28 23.355C56.0859 23.355 50.1454 25.8156 45.7655 30.1955C41.3856 34.5754 38.925 40.5159 38.925 46.71V139.741L35.3439 143.166C29.7378 148.543 25.8687 155.474 24.2342 163.068C22.5998 170.662 23.2748 178.571 26.1723 185.778C29.0699 192.986 34.0576 199.161 40.4937 203.51C46.9298 207.859 54.52 210.183 62.2878 210.183C70.0556 210.183 77.6458 207.859 84.0819 203.51C90.518 199.161 95.5056 192.986 98.4032 185.778C101.301 178.571 101.976 170.662 100.341 163.068C98.7069 155.474 94.8377 148.543 89.2316 143.166L85.635 139.756V46.71C85.635 40.5159 83.1744 34.5754 78.7945 30.1955C74.4146 25.8156 68.4741 23.355 62.28 23.355ZM70.065 85.635C70.065 83.5703 69.2448 81.5901 67.7848 80.1301C66.3248 78.6702 64.3447 77.85 62.28 77.85C60.2153 77.85 58.2351 78.6702 56.7752 80.1301C55.3152 81.5901 54.495 83.5703 54.495 85.635V149.238C49.3007 151.075 44.9229 154.688 42.1353 159.44C39.3477 164.193 38.3297 169.777 39.2614 175.207C40.193 180.637 43.0142 185.563 47.2265 189.114C51.4387 192.665 56.7707 194.613 62.28 194.613C67.7893 194.613 73.1213 192.665 77.3335 189.114C81.5458 185.563 84.367 180.637 85.2986 175.207C86.2303 169.777 85.2123 164.193 82.4247 159.44C79.6371 154.688 75.2592 151.075 70.065 149.238V85.635Z" fill="black"/>
      </svg>
    )
  }

  const generateDegreeCelsiusIconSVG = () => {
    return (
      <svg style={{opacity: "0.2"}} width="25" viewBox="0 0 113 110" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M25.5 14.5C25.5 20.5752 20.5751 25.5 14.5 25.5C8.42487 25.5 3.5 20.5752 3.5 14.5C3.5 8.42487 8.42487 3.5 14.5 3.5C20.5751 3.5 25.5 8.42487 25.5 14.5Z" stroke="black" stroke-width="7"/>
        <path d="M112.113 48.918H92.6701C92.315 46.4026 91.59 44.1683 90.495 42.2152C89.4001 40.2325 87.9944 38.5457 86.2781 37.1548C84.5617 35.764 82.579 34.6986 80.3299 33.9588C78.1104 33.219 75.6986 32.8491 73.0945 32.8491C68.3892 32.8491 64.2906 34.018 60.7987 36.3558C57.3067 38.6641 54.599 42.0376 52.6754 46.4766C50.7519 50.8859 49.7901 56.2422 49.7901 62.5455C49.7901 69.0263 50.7519 74.4714 52.6754 78.8807C54.6286 83.29 57.3511 86.6192 60.843 88.8683C64.335 91.1173 68.3744 92.2418 72.9613 92.2418C75.5359 92.2418 77.9181 91.9015 80.108 91.2209C82.3274 90.5402 84.2953 89.5489 86.0117 88.2468C87.7281 86.9151 89.1486 85.3023 90.2731 83.4084C91.4272 81.5144 92.2262 79.3542 92.6701 76.9276L112.113 77.0163C111.609 81.1889 110.352 85.2135 108.339 89.0902C106.357 92.9373 103.679 96.3848 100.305 99.4329C96.9611 102.451 92.966 104.848 88.32 106.624C83.7035 108.37 78.4804 109.243 72.6506 109.243C64.5421 109.243 57.2919 107.408 50.8999 103.739C44.5374 100.069 39.5066 94.7572 35.8075 87.8029C32.138 80.8486 30.3033 72.4294 30.3033 62.5455C30.3033 52.6319 32.1676 44.1979 35.8963 37.2436C39.625 30.2893 44.6854 24.9922 51.0774 21.3523C57.4695 17.6828 64.6605 15.848 72.6506 15.848C77.9181 15.848 82.8009 16.5878 87.299 18.0675C91.8267 19.5471 95.8365 21.7074 99.3285 24.5483C102.82 27.3596 105.661 30.8072 107.851 34.891C110.071 38.9748 111.491 43.6504 112.113 48.918Z" fill="black"/>
      </svg>
    )
  }

  const data = [
    {
      Hour: '00:00',
      temp: 24,
    },
    {
      Hour: '01:00',
      temp: 10,
    },
    {
      Hour: '02:00',
      temp: 20,
    },
    {
      Hour: '03:00',
      temp: 5,
    },
    {
      Hour: '04:00',
      temp: 27,
    },
    {
      Hour: '05:00',
      temp: 15,
    },
    {
      Hour: '06:00',
      temp: 30,
    },
    {
      Hour: '07:00',
      temp: 10,
    },
    {
      Hour: '08:00',
      temp: 20,
    },
    {
      Hour: '09:00',
      temp: 7,
    },
    {
      Hour: '10:00',
      temp: 3,
    },
    {
      Hour: '11:00',
      temp: 26,
    },
    {
      Hour: '12:00',
      temp: 20,
    },
    {
      Hour: '13:00',
      temp: 30,
    },
    {
      Hour: '14:00',
      temp: 10,
    },
    {
      Hour: '15:00',
      temp: 17,
    },
    {
      Hour: '16:00',
      temp: 5,
    },
    {
      Hour: '17:00',
      temp: 20,
    },
    {
      Hour: '18:00',
      temp: 27,
    },
    {
      Hour: '19:00',
      temp: 30,
    },
    {
      Hour: '20:00',
      temp: 18,
    },
    {
      Hour: '21:00',
      temp: 15,
    },
    {
      Hour: '22:00',
      temp: 22,
    },
    {
      Hour: '23:00',
      temp: 10,
    },
  ];

  return (
    <div class="TemperaturePanelContainer">

      <div style={{color: 'rgba(0,0,0,0.2)', fontWeight: '500', fontSize:'30px', display: 'flex', justifyContent: 'space-between', padding: '15px', alignItems: 'center'}}>
        <di style={{display: 'flex', alignItems: "center", gap: "10px"}}>
          <div>{generateTempIconSVG()}</div>
          <div style={{fontSize: '15px'}}>Temperature</div>
        </di>
        <div>{currentTemperature} {generateDegreeCelsiusIconSVG()}</div>
      </div>

      <div style={{ display: 'flex', justifyContent: 'center', fontSize: '12px'}}>
        <AreaChart width={625} height={200} data={data}
          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>
          <defs>
            {/* <linearGradient id="colorUv" x1="0" y1="0" x2="0" y2="1">
              <stop offset="5%" stopColor="#8884d8" stopOpacity={0.8}/>
              <stop offset="95%" stopColor="#8884d8" stopOpacity={0}/>
            </linearGradient> */}
            <linearGradient id="temp" x1="0" y1="0" x2="0" y2="1">
              <stop offset="5%" stopColor="gray" stopOpacity={0.8}/>
              <stop offset="95%" stopColor="lightgray" stopOpacity={0}/>
            </linearGradient>
          </defs>
          <XAxis dataKey="Hour" />
          <YAxis dataKey="temp"/>
          {/* <CartesianGrid strokeDasharray="3 3" /> */}
          <Tooltip />
          {/* <Area type="monotone" dataKey="uv" stroke="#8884d8" fillOpacity={1} fill="url(#colorUv)" /> */}
          <Area type="monotone" dataKey="temp" stroke="" fillOpacity={1} fill="url(#temp)" />
        </AreaChart>
      </div>

    </div>
  )
}

export default TemperaturePanel